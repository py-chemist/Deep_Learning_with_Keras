{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "from keras.models import Sequential\n",
    "from keras.layers import Dense\n",
    "from keras.wrappers.scikit_learn import KerasClassifier\n",
    "from sklearn.model_selection import StratifiedKFold, cross_val_score\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import time"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>#of preg</th>\n",
       "      <th>gluc_conc</th>\n",
       "      <th>blood_pressure</th>\n",
       "      <th>skin_thickness</th>\n",
       "      <th>insulin_conc</th>\n",
       "      <th>BMI</th>\n",
       "      <th>DPF</th>\n",
       "      <th>age</th>\n",
       "      <th>class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>6</td>\n",
       "      <td>148</td>\n",
       "      <td>72</td>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>33.6</td>\n",
       "      <td>0.627</td>\n",
       "      <td>50</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>85</td>\n",
       "      <td>66</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>26.6</td>\n",
       "      <td>0.351</td>\n",
       "      <td>31</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>8</td>\n",
       "      <td>183</td>\n",
       "      <td>64</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>23.3</td>\n",
       "      <td>0.672</td>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>89</td>\n",
       "      <td>66</td>\n",
       "      <td>23</td>\n",
       "      <td>94</td>\n",
       "      <td>28.1</td>\n",
       "      <td>0.167</td>\n",
       "      <td>21</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>137</td>\n",
       "      <td>40</td>\n",
       "      <td>35</td>\n",
       "      <td>168</td>\n",
       "      <td>43.1</td>\n",
       "      <td>2.288</td>\n",
       "      <td>33</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   #of preg  gluc_conc  blood_pressure  skin_thickness  insulin_conc   BMI  \\\n",
       "0         6        148              72              35             0  33.6   \n",
       "1         1         85              66              29             0  26.6   \n",
       "2         8        183              64               0             0  23.3   \n",
       "3         1         89              66              23            94  28.1   \n",
       "4         0        137              40              35           168  43.1   \n",
       "\n",
       "     DPF  age  class  \n",
       "0  0.627   50      1  \n",
       "1  0.351   31      0  \n",
       "2  0.672   32      1  \n",
       "3  0.167   21      0  \n",
       "4  2.288   33      1  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 1. Number of times pregnant\n",
    "# 2. Plasma glucose concentration a 2 hours in an oral glucose tolerance test\n",
    "# 3. Diastolic blood pressure (mm Hg)\n",
    "# 4. Triceps skin fold thickness (mm)\n",
    "# 5. 2-Hour serum insulin (mu U/ml)\n",
    "# 6. Body mass index (weight in kg/(height in m)^2)\n",
    "# 7. Diabetes pedigree function\n",
    "# 8. Age (years)\n",
    "# 9. Class variable (0 or 1)\n",
    "\n",
    "names = [\"#of preg\", \"gluc_conc\", \"blood_pressure\", \"skin_thickness\", \"insulin_conc\",\n",
    "        \"BMI\", \"DPF\", \"age\", \"class\"]\n",
    "\n",
    "df = pd.read_csv('data/pima-indians-diabetes.csv', names=names)\n",
    "\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "X = df[df.columns[:-1].values]\n",
    "y = df[\"class\"].values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "scaler = StandardScaler()\n",
    "X_scale = scaler.fit_transform(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def create_model():\n",
    "    model = Sequential()\n",
    "    model.add(Dense(12, input_dim=8, kernel_initializer='uniform', activation='relu'))\n",
    "    model.add(Dense(8, kernel_initializer='uniform', activation=\"relu\"))\n",
    "    model.add(Dense(1, kernel_initializer='uniform', activation='sigmoid'))\n",
    "    model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])\n",
    "    return model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "np.random.seed(7)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.774777850863\n",
      "145.73529267311096\n"
     ]
    }
   ],
   "source": [
    "start = time.time()\n",
    "model = KerasClassifier(build_fn=create_model, epochs=150, batch_size=10, verbose=0)\n",
    "kfold = StratifiedKFold(n_splits=10, shuffle=True, random_state=7)\n",
    "results = cross_val_score(model, X_scale, y, cv=10)\n",
    "print(results.mean())\n",
    "print(time.time() - start)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from keras.callbacks import Callback"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"http://bokeh.pydata.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"23b81191-f477-4e4e-a086-5c7977573118\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(global) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof (window._bokeh_onload_callbacks) === \"undefined\" || force === true) {\n",
       "    window._bokeh_onload_callbacks = [];\n",
       "    window._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "\n",
       "  \n",
       "  if (typeof (window._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    window._bokeh_timeout = Date.now() + 5000;\n",
       "    window._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    if (window.Bokeh !== undefined) {\n",
       "      var el = document.getElementById(\"23b81191-f477-4e4e-a086-5c7977573118\");\n",
       "      el.textContent = \"BokehJS \" + Bokeh.version + \" successfully loaded.\";\n",
       "    } else if (Date.now() < window._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function run_callbacks() {\n",
       "    window._bokeh_onload_callbacks.forEach(function(callback) { callback() });\n",
       "    delete window._bokeh_onload_callbacks\n",
       "    console.info(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(js_urls, callback) {\n",
       "    window._bokeh_onload_callbacks.push(callback);\n",
       "    if (window._bokeh_is_loading > 0) {\n",
       "      console.log(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.log(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    window._bokeh_is_loading = js_urls.length;\n",
       "    for (var i = 0; i < js_urls.length; i++) {\n",
       "      var url = js_urls[i];\n",
       "      var s = document.createElement('script');\n",
       "      s.src = url;\n",
       "      s.async = false;\n",
       "      s.onreadystatechange = s.onload = function() {\n",
       "        window._bokeh_is_loading--;\n",
       "        if (window._bokeh_is_loading === 0) {\n",
       "          console.log(\"Bokeh: all BokehJS libraries loaded\");\n",
       "          run_callbacks()\n",
       "        }\n",
       "      };\n",
       "      s.onerror = function() {\n",
       "        console.warn(\"failed to load library \" + url);\n",
       "      };\n",
       "      console.log(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
       "    }\n",
       "  };var element = document.getElementById(\"23b81191-f477-4e4e-a086-5c7977573118\");\n",
       "  if (element == null) {\n",
       "    console.log(\"Bokeh: ERROR: autoload.js configured with elementid '23b81191-f477-4e4e-a086-5c7977573118' but no matching script tag was found. \")\n",
       "    return false;\n",
       "  }\n",
       "\n",
       "  var js_urls = [\"https://cdn.pydata.org/bokeh/release/bokeh-0.12.5.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-widgets-0.12.5.min.js\"];\n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    \n",
       "    function(Bokeh) {\n",
       "      \n",
       "    },\n",
       "    \n",
       "    function(Bokeh) {\n",
       "      \n",
       "      document.getElementById(\"23b81191-f477-4e4e-a086-5c7977573118\").textContent = \"BokehJS is loading...\";\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "      console.log(\"Bokeh: injecting CSS: https://cdn.pydata.org/bokeh/release/bokeh-0.12.5.min.css\");\n",
       "      Bokeh.embed.inject_css(\"https://cdn.pydata.org/bokeh/release/bokeh-0.12.5.min.css\");\n",
       "      console.log(\"Bokeh: injecting CSS: https://cdn.pydata.org/bokeh/release/bokeh-widgets-0.12.5.min.css\");\n",
       "      Bokeh.embed.inject_css(\"https://cdn.pydata.org/bokeh/release/bokeh-widgets-0.12.5.min.css\");\n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if ((window.Bokeh !== undefined) || (force === true)) {\n",
       "      for (var i = 0; i < inline_js.length; i++) {\n",
       "        inline_js[i](window.Bokeh);\n",
       "      }if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < window._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!window._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      window._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"23b81191-f477-4e4e-a086-5c7977573118\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (window._bokeh_is_loading === 0) {\n",
       "    console.log(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(js_urls, function() {\n",
       "      console.log(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(this));"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from bokeh.io import push_notebook, output_notebook\n",
    "from bokeh.layouts import row, widgetbox, column\n",
    "from bokeh.models import ColumnDataSource\n",
    "from bokeh.models.widgets import PreText\n",
    "from bokeh.plotting import figure, show\n",
    "output_notebook()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <div class=\"bk-plotdiv\" id=\"26c2c4ea-b62e-4014-b7fc-d110a4621c86\"></div>\n",
       "    </div>\n",
       "<script type=\"text/javascript\">\n",
       "  \n",
       "  (function(global) {\n",
       "    function now() {\n",
       "      return new Date();\n",
       "    }\n",
       "  \n",
       "    var force = false;\n",
       "  \n",
       "    if (typeof (window._bokeh_onload_callbacks) === \"undefined\" || force === true) {\n",
       "      window._bokeh_onload_callbacks = [];\n",
       "      window._bokeh_is_loading = undefined;\n",
       "    }\n",
       "  \n",
       "  \n",
       "    \n",
       "    if (typeof (window._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "      window._bokeh_timeout = Date.now() + 0;\n",
       "      window._bokeh_failed_load = false;\n",
       "    }\n",
       "  \n",
       "    var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "       \"<div style='background-color: #fdd'>\\n\"+\n",
       "       \"<p>\\n\"+\n",
       "       \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "       \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "       \"</p>\\n\"+\n",
       "       \"<ul>\\n\"+\n",
       "       \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "       \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "       \"</ul>\\n\"+\n",
       "       \"<code>\\n\"+\n",
       "       \"from bokeh.resources import INLINE\\n\"+\n",
       "       \"output_notebook(resources=INLINE)\\n\"+\n",
       "       \"</code>\\n\"+\n",
       "       \"</div>\"}};\n",
       "  \n",
       "    function display_loaded() {\n",
       "      if (window.Bokeh !== undefined) {\n",
       "        var el = document.getElementById(\"26c2c4ea-b62e-4014-b7fc-d110a4621c86\");\n",
       "        el.textContent = \"BokehJS \" + Bokeh.version + \" successfully loaded.\";\n",
       "      } else if (Date.now() < window._bokeh_timeout) {\n",
       "        setTimeout(display_loaded, 100)\n",
       "      }\n",
       "    }if ((window.Jupyter !== undefined) && Jupyter.notebook.kernel) {\n",
       "      comm_manager = Jupyter.notebook.kernel.comm_manager\n",
       "      comm_manager.register_target(\"e6d8dee7-73c8-493b-9f14-7b07b18e0234\", function () {});\n",
       "    }\n",
       "  \n",
       "    function run_callbacks() {\n",
       "      window._bokeh_onload_callbacks.forEach(function(callback) { callback() });\n",
       "      delete window._bokeh_onload_callbacks\n",
       "      console.info(\"Bokeh: all callbacks have finished\");\n",
       "    }\n",
       "  \n",
       "    function load_libs(js_urls, callback) {\n",
       "      window._bokeh_onload_callbacks.push(callback);\n",
       "      if (window._bokeh_is_loading > 0) {\n",
       "        console.log(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "        return null;\n",
       "      }\n",
       "      if (js_urls == null || js_urls.length === 0) {\n",
       "        run_callbacks();\n",
       "        return null;\n",
       "      }\n",
       "      console.log(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "      window._bokeh_is_loading = js_urls.length;\n",
       "      for (var i = 0; i < js_urls.length; i++) {\n",
       "        var url = js_urls[i];\n",
       "        var s = document.createElement('script');\n",
       "        s.src = url;\n",
       "        s.async = false;\n",
       "        s.onreadystatechange = s.onload = function() {\n",
       "          window._bokeh_is_loading--;\n",
       "          if (window._bokeh_is_loading === 0) {\n",
       "            console.log(\"Bokeh: all BokehJS libraries loaded\");\n",
       "            run_callbacks()\n",
       "          }\n",
       "        };\n",
       "        s.onerror = function() {\n",
       "          console.warn(\"failed to load library \" + url);\n",
       "        };\n",
       "        console.log(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "        document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
       "      }\n",
       "    };var element = document.getElementById(\"26c2c4ea-b62e-4014-b7fc-d110a4621c86\");\n",
       "    if (element == null) {\n",
       "      console.log(\"Bokeh: ERROR: autoload.js configured with elementid '26c2c4ea-b62e-4014-b7fc-d110a4621c86' but no matching script tag was found. \")\n",
       "      return false;\n",
       "    }\n",
       "  \n",
       "    var js_urls = [];\n",
       "  \n",
       "    var inline_js = [\n",
       "      function(Bokeh) {\n",
       "        (function() {\n",
       "          var fn = function() {\n",
       "            var docs_json = {\"1c5435d5-082c-4780-b691-e17c6218ab73\":{\"roots\":{\"references\":[{\"attributes\":{\"dimension\":1,\"plot\":{\"id\":\"01324626-43ef-45ff-abaf-514213378a32\",\"subtype\":\"Figure\",\"type\":\"Plot\"},\"ticker\":{\"id\":\"a52cd984-74f9-4cae-be68-9bd47c98d876\",\"type\":\"BasicTicker\"}},\"id\":\"3cb862f3-774c-4615-9378-e910c632eb85\",\"type\":\"Grid\"},{\"attributes\":{\"plot\":{\"id\":\"01324626-43ef-45ff-abaf-514213378a32\",\"subtype\":\"Figure\",\"type\":\"Plot\"}},\"id\":\"763ef6be-9d19-4015-bb74-f93f9bd8b4c9\",\"type\":\"PanTool\"},{\"attributes\":{\"plot\":{\"id\":\"01324626-43ef-45ff-abaf-514213378a32\",\"subtype\":\"Figure\",\"type\":\"Plot\"}},\"id\":\"2a5ebbd6-884c-417a-9326-c6b32ad494f7\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"overlay\":{\"id\":\"ecaea9c3-5a6f-4a74-823c-c669750e54db\",\"type\":\"BoxAnnotation\"},\"plot\":{\"id\":\"01324626-43ef-45ff-abaf-514213378a32\",\"subtype\":\"Figure\",\"type\":\"Plot\"}},\"id\":\"c568d617-52f0-4c1d-a327-6769bc258eb7\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"plot\":{\"id\":\"01324626-43ef-45ff-abaf-514213378a32\",\"subtype\":\"Figure\",\"type\":\"Plot\"}},\"id\":\"c08833f4-d192-47e2-b494-4ffc2fee93b8\",\"type\":\"SaveTool\"},{\"attributes\":{\"plot\":{\"id\":\"01324626-43ef-45ff-abaf-514213378a32\",\"subtype\":\"Figure\",\"type\":\"Plot\"}},\"id\":\"b07bc8db-01e9-4cc3-8566-f511ee81b83f\",\"type\":\"ResetTool\"},{\"attributes\":{\"plot\":{\"id\":\"01324626-43ef-45ff-abaf-514213378a32\",\"subtype\":\"Figure\",\"type\":\"Plot\"}},\"id\":\"4f6f938d-fe81-4f74-a24c-f0dbe397877d\",\"type\":\"HelpTool\"},{\"attributes\":{\"line_color\":{\"value\":\"red\"},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"d8f2b95d-c329-461d-99a5-05f7b17de99c\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1d5fd1f4-65fa-40e7-abf6-823f1d48ccb0\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"7e770d6d-e43e-47bb-98d4-a72674bd4c65\",\"type\":\"ColumnDataSource\"},\"glyph\":{\"id\":\"d8f2b95d-c329-461d-99a5-05f7b17de99c\",\"type\":\"Line\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1d5fd1f4-65fa-40e7-abf6-823f1d48ccb0\",\"type\":\"Line\"},\"selection_glyph\":null},\"id\":\"73241447-2116-4f00-a3db-20c2ab6ce540\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1f77b4\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"z\"}},\"id\":\"5be10403-a504-442a-9bb0-1648590942c4\",\"type\":\"Circle\"},{\"attributes\":{\"data_source\":{\"id\":\"7e770d6d-e43e-47bb-98d4-a72674bd4c65\",\"type\":\"ColumnDataSource\"},\"glyph\":{\"id\":\"7e037024-dbc1-470d-b0aa-4a6029d176ed\",\"type\":\"Circle\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"5be10403-a504-442a-9bb0-1648590942c4\",\"type\":\"Circle\"},\"selection_glyph\":null},\"id\":\"cf79a36c-0fc0-4e28-999a-91abe284353b\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"z\"}},\"id\":\"87c4fcbb-9cf7-4a5e-87f0-158cfb871b59\",\"type\":\"Line\"},{\"attributes\":{\"plot\":null,\"text\":\"\"},\"id\":\"1645f3dd-6311-4a74-b1ea-fd2005037288\",\"type\":\"Title\"},{\"attributes\":{\"line_color\":{\"value\":\"green\"},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"z\"}},\"id\":\"b65668ff-7256-441e-a872-f19064bb8c71\",\"type\":\"Line\"},{\"attributes\":{\"data_source\":{\"id\":\"7e770d6d-e43e-47bb-98d4-a72674bd4c65\",\"type\":\"ColumnDataSource\"},\"glyph\":{\"id\":\"b65668ff-7256-441e-a872-f19064bb8c71\",\"type\":\"Line\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"87c4fcbb-9cf7-4a5e-87f0-158cfb871b59\",\"type\":\"Line\"},\"selection_glyph\":null},\"id\":\"762986bf-c309-43e2-a7ee-75b2c0aee301\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1f77b4\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"6c95f91c-88b1-40c2-86b8-3878362ea147\",\"type\":\"Circle\"},{\"attributes\":{\"data_source\":{\"id\":\"7e770d6d-e43e-47bb-98d4-a72674bd4c65\",\"type\":\"ColumnDataSource\"},\"glyph\":{\"id\":\"2be87e68-40ed-48a4-b5b3-0e3e906e5a0d\",\"type\":\"Circle\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"6c95f91c-88b1-40c2-86b8-3878362ea147\",\"type\":\"Circle\"},\"selection_glyph\":null},\"id\":\"e5c7588d-678e-4d43-ae43-7e3a1a1d2510\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"83ab63ae-8004-41a0-b39f-ee63bce6d48c\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"below\":[{\"id\":\"f1a1329a-6bb9-4384-88a3-aaf1a1788266\",\"type\":\"LinearAxis\"}],\"left\":[{\"id\":\"d2275f70-a949-45ce-b9a8-f9c364354d28\",\"type\":\"LinearAxis\"}],\"plot_height\":250,\"plot_width\":700,\"renderers\":[{\"id\":\"f1a1329a-6bb9-4384-88a3-aaf1a1788266\",\"type\":\"LinearAxis\"},{\"id\":\"f1b5dae0-5472-47f3-8eb9-0327ac44c116\",\"type\":\"Grid\"},{\"id\":\"d2275f70-a949-45ce-b9a8-f9c364354d28\",\"type\":\"LinearAxis\"},{\"id\":\"3cb862f3-774c-4615-9378-e910c632eb85\",\"type\":\"Grid\"},{\"id\":\"ecaea9c3-5a6f-4a74-823c-c669750e54db\",\"type\":\"BoxAnnotation\"},{\"id\":\"e5c7588d-678e-4d43-ae43-7e3a1a1d2510\",\"type\":\"GlyphRenderer\"},{\"id\":\"73241447-2116-4f00-a3db-20c2ab6ce540\",\"type\":\"GlyphRenderer\"},{\"id\":\"cf79a36c-0fc0-4e28-999a-91abe284353b\",\"type\":\"GlyphRenderer\"},{\"id\":\"762986bf-c309-43e2-a7ee-75b2c0aee301\",\"type\":\"GlyphRenderer\"}],\"title\":{\"id\":\"1645f3dd-6311-4a74-b1ea-fd2005037288\",\"type\":\"Title\"},\"tool_events\":{\"id\":\"b4b052dc-885f-46b5-8891-f36d1edffdf4\",\"type\":\"ToolEvents\"},\"toolbar\":{\"id\":\"8bd73fc3-1c02-4bff-843f-578017608c05\",\"type\":\"Toolbar\"},\"x_range\":{\"id\":\"0e276f9c-64d6-4edc-92e6-b7c1e880de8f\",\"type\":\"DataRange1d\"},\"y_range\":{\"id\":\"7c88914b-1d7f-4020-9ad5-328a03dd6974\",\"type\":\"DataRange1d\"}},\"id\":\"01324626-43ef-45ff-abaf-514213378a32\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"callback\":null,\"column_names\":[\"x\",\"y\",\"z\"],\"data\":{\"x\":[],\"y\":[],\"z\":[]}},\"id\":\"7e770d6d-e43e-47bb-98d4-a72674bd4c65\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"fill_color\":{\"value\":\"#1f77b4\"},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"2be87e68-40ed-48a4-b5b3-0e3e906e5a0d\",\"type\":\"Circle\"},{\"attributes\":{},\"id\":\"ca63f034-bc6e-48a7-8155-950fc1d780f2\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"b4b052dc-885f-46b5-8891-f36d1edffdf4\",\"type\":\"ToolEvents\"},{\"attributes\":{\"fill_color\":{\"value\":\"#1f77b4\"},\"line_color\":{\"value\":\"#1f77b4\"},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"z\"}},\"id\":\"7e037024-dbc1-470d-b0aa-4a6029d176ed\",\"type\":\"Circle\"},{\"attributes\":{\"callback\":null},\"id\":\"0e276f9c-64d6-4edc-92e6-b7c1e880de8f\",\"type\":\"DataRange1d\"},{\"attributes\":{\"active_drag\":\"auto\",\"active_scroll\":\"auto\",\"active_tap\":\"auto\",\"tools\":[{\"id\":\"763ef6be-9d19-4015-bb74-f93f9bd8b4c9\",\"type\":\"PanTool\"},{\"id\":\"2a5ebbd6-884c-417a-9326-c6b32ad494f7\",\"type\":\"WheelZoomTool\"},{\"id\":\"c568d617-52f0-4c1d-a327-6769bc258eb7\",\"type\":\"BoxZoomTool\"},{\"id\":\"c08833f4-d192-47e2-b494-4ffc2fee93b8\",\"type\":\"SaveTool\"},{\"id\":\"b07bc8db-01e9-4cc3-8566-f511ee81b83f\",\"type\":\"ResetTool\"},{\"id\":\"4f6f938d-fe81-4f74-a24c-f0dbe397877d\",\"type\":\"HelpTool\"}]},\"id\":\"8bd73fc3-1c02-4bff-843f-578017608c05\",\"type\":\"Toolbar\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":{\"value\":0.5},\"fill_color\":{\"value\":\"lightgrey\"},\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":{\"value\":1.0},\"line_color\":{\"value\":\"black\"},\"line_dash\":[4,4],\"line_width\":{\"value\":2},\"plot\":null,\"render_mode\":\"css\",\"right_units\":\"screen\",\"top_units\":\"screen\"},\"id\":\"ecaea9c3-5a6f-4a74-823c-c669750e54db\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"callback\":null},\"id\":\"7c88914b-1d7f-4020-9ad5-328a03dd6974\",\"type\":\"DataRange1d\"},{\"attributes\":{\"formatter\":{\"id\":\"83ab63ae-8004-41a0-b39f-ee63bce6d48c\",\"type\":\"BasicTickFormatter\"},\"plot\":{\"id\":\"01324626-43ef-45ff-abaf-514213378a32\",\"subtype\":\"Figure\",\"type\":\"Plot\"},\"ticker\":{\"id\":\"622c8cc9-0619-4242-867d-35c99a496197\",\"type\":\"BasicTicker\"}},\"id\":\"f1a1329a-6bb9-4384-88a3-aaf1a1788266\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"622c8cc9-0619-4242-867d-35c99a496197\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"a52cd984-74f9-4cae-be68-9bd47c98d876\",\"type\":\"BasicTicker\"},{\"attributes\":{\"plot\":{\"id\":\"01324626-43ef-45ff-abaf-514213378a32\",\"subtype\":\"Figure\",\"type\":\"Plot\"},\"ticker\":{\"id\":\"622c8cc9-0619-4242-867d-35c99a496197\",\"type\":\"BasicTicker\"}},\"id\":\"f1b5dae0-5472-47f3-8eb9-0327ac44c116\",\"type\":\"Grid\"},{\"attributes\":{\"formatter\":{\"id\":\"ca63f034-bc6e-48a7-8155-950fc1d780f2\",\"type\":\"BasicTickFormatter\"},\"plot\":{\"id\":\"01324626-43ef-45ff-abaf-514213378a32\",\"subtype\":\"Figure\",\"type\":\"Plot\"},\"ticker\":{\"id\":\"a52cd984-74f9-4cae-be68-9bd47c98d876\",\"type\":\"BasicTicker\"}},\"id\":\"d2275f70-a949-45ce-b9a8-f9c364354d28\",\"type\":\"LinearAxis\"}],\"root_ids\":[\"01324626-43ef-45ff-abaf-514213378a32\"]},\"title\":\"Bokeh Application\",\"version\":\"0.12.5\"}};\n",
       "            var render_items = [{\"docid\":\"1c5435d5-082c-4780-b691-e17c6218ab73\",\"elementid\":\"26c2c4ea-b62e-4014-b7fc-d110a4621c86\",\"modelid\":\"01324626-43ef-45ff-abaf-514213378a32\",\"notebook_comms_target\":\"e6d8dee7-73c8-493b-9f14-7b07b18e0234\"}];\n",
       "            \n",
       "            Bokeh.embed.embed_items(docs_json, render_items);\n",
       "          };\n",
       "          if (document.readyState != \"loading\") fn();\n",
       "          else document.addEventListener(\"DOMContentLoaded\", fn);\n",
       "        })();\n",
       "      },\n",
       "      function(Bokeh) {\n",
       "      }\n",
       "    ];\n",
       "  \n",
       "    function run_inline_js() {\n",
       "      \n",
       "      if ((window.Bokeh !== undefined) || (force === true)) {\n",
       "        for (var i = 0; i < inline_js.length; i++) {\n",
       "          inline_js[i](window.Bokeh);\n",
       "        }if (force === true) {\n",
       "          display_loaded();\n",
       "        }} else if (Date.now() < window._bokeh_timeout) {\n",
       "        setTimeout(run_inline_js, 100);\n",
       "      } else if (!window._bokeh_failed_load) {\n",
       "        console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "        window._bokeh_failed_load = true;\n",
       "      } else if (force !== true) {\n",
       "        var cell = $(document.getElementById(\"26c2c4ea-b62e-4014-b7fc-d110a4621c86\")).parents('.cell').data().cell;\n",
       "        cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "      }\n",
       "  \n",
       "    }\n",
       "  \n",
       "    if (window._bokeh_is_loading === 0) {\n",
       "      console.log(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "      run_inline_js();\n",
       "    } else {\n",
       "      load_libs(js_urls, function() {\n",
       "        console.log(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "        run_inline_js();\n",
       "      });\n",
       "    }\n",
       "  }(this));\n",
       "</script>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x7f989cee82b0>"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "source = ColumnDataSource(data=dict(x=[], y=[], z=[]))\n",
    "\n",
    "# Set up plot\n",
    "plot = figure(plot_height=250, plot_width=700)\n",
    "\n",
    "plot.circle('x', 'y', source=source)\n",
    "plot.line('x', 'y', source=source, color='red')\n",
    "plot.circle('x', 'z', source=source)\n",
    "plot.line('x', 'z', source=source, color='green')\n",
    "show(plot, notebook_handle=True)\n",
    "\n",
    "new_data = {\n",
    "    'x' : [],\n",
    "    'y' : [],\n",
    "    'z' : []\n",
    "}\n",
    "\n",
    "class TrainingHistory(Callback):\n",
    "    def on_train_begin(self, logs={}):\n",
    "        self.losses = []\n",
    "        self.i = 1        \n",
    "\n",
    "    def on_epoch_end(self, batch, logs={}):        \n",
    "        self.losses.append(logs.get('loss'))\n",
    "        new_data['x'] = [self.i]\n",
    "        new_data['y'] = [logs.get('loss')]\n",
    "        new_data['z'] = [logs.get('acc')]\n",
    "        source.stream(new_data, rollover=30)\n",
    "        # text_input.text = \"Progress: \" + str(self.i/50.0 * 100)\n",
    "        push_notebook()\n",
    "        self.i += 1\n",
    "        \n",
    "            \n",
    "history = TrainingHistory()\n",
    "\n",
    "def create_model():\n",
    "    model = Sequential()\n",
    "    model.add(Dense(12, input_dim=8, kernel_initializer='uniform', activation='relu'))\n",
    "    model.add(Dense(8, kernel_initializer='uniform', activation=\"relu\"))\n",
    "    model.add(Dense(1, kernel_initializer='uniform', activation='sigmoid'))\n",
    "    model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])\n",
    "    return model\n",
    "\n",
    "model = create_model()\n",
    "\n",
    "model.fit(X_scale, y, epochs=250, batch_size=5, verbose=0, callbacks=[history])\n",
    "\n",
    "# model = KerasClassifier(build_fn=create_model, epochs=5, batch_size=10, verbose=0, callbacks=[history])\n",
    "# kfold = StratifiedKFold(n_splits=10, shuffle=True, random_state=7)\n",
    "# results = cross_val_score(model, X_scale, y, cv=10)\n",
    "# print(results.mean())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from keras."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
